project: wired-auth
#Replace with your team's admin group
admin_ad_group: GIS-SDLC-ADMINS
#Replace with your team's mail alias
team_mailer_alias: gis-sdlc@cisco.com
##Replace with your team's IT-Application name.
it_application: Intelligent Platforms Enablement

lifecycles:
  development:
    - dev
    - dev2
  staging:
    - stg
  production:
    - prd1
    - prd2

check:
  image: "containers.cisco.com/gissdlc/build_check_centos7"
  script:
    - ./tools/check.sh
  branch:
    except:
      - master

build:
  #type: tar.gz # The type will vary with each package type. If you do not intend to build a custom package other than the default source tar.gz, do not specify the type.
  image: "containers.cisco.com/gissdlc/build_check_centos7"
  script:
    - ./tools/build.sh

  # Specify artifactory repository to the which the artifact of type built has to be uploaded.
  # If not specified the artifact will be uploaded to cisco-shared-libs-local by default.

  #  artifactory_repo: custom-artifactory-repo

  # Specify where the artifact that is built by your build script can be listed by heighliner.
  # Heighliner will check the directory specified for the artifact and uploads to the artifactory.
  # If not specified, heighliner will check build directory by default.

  # artifact_build_dir: local-directory

deploy:
  type: custom
  image: "containers.cisco.com/gissdlc/deployserver_centos7"
  script:
   # is the target deployment env selected on release.cisco.com and is autofilled by Heighliner
   # is the path where the artifact package is retrieved from artifactory and stored at.
   # Both  and  are passed as 1st and 2nd parameters to  deploy.sh and you could pass
   # it in any order. But, care should be taken to choose these parameters in the same given order in deploy.sh
    - ./tools/deploy.sh {{lifecycle}} {{artifact_path}}
  gates:
    production:
      branch:
        only:
          - master
    staging:
      branch:
        only:
          - release/*